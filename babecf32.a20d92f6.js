/*! For license information please see babecf32.a20d92f6.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{182:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return l})),a.d(n,"metadata",(function(){return r})),a.d(n,"rightToc",(function(){return u})),a.d(n,"default",(function(){return b}));var t=a(2),i=a(9),o=(a(0),a(200)),s=a(205),c=a(204),l={id:"accessing",title:"Accessing elements",sidebar_label:"Accessing elements"},r={id:"tutorials/accessing",title:"Accessing elements",description:"A little hands-on training will probably go a long way, so let's through some of the functions available in PopGen.jl with the included data. This tutorial will include both inputs and outputs so you can be confident what you're seeing in your Julia session is exactly what's supposed to happen. Sometimes the outputs can be a little lengthy, so they will be arranged in code \"tabs\", where the left-most tab is the input named after what it's accomplishing, and the right tab is the output of running the command. This guide is to show you how to directly access  PopData elements, but there are shortcut commands to view just about every element of the data within.",source:"@site/docs/tutorials/accessing_popdata.md",permalink:"/PopGen.jl/docs/tutorials/accessing",editUrl:"https://github.com/pdimens/popgen.jl/edit/documentation/docs/tutorials/accessing_popdata.md",lastUpdatedAt:1591201099,sidebar_label:"Accessing elements",sidebar:"docs",previous:{title:"Start here",permalink:"/PopGen.jl/docs/tutorials/manipulate"},next:{title:"Data exclusion",permalink:"/PopGen.jl/docs/tutorials/exclusion"}},u=[{value:"Loading in the data",id:"loading-in-the-data",children:[]},{value:"The metadata table",id:"the-metadata-table",children:[{value:".meta",id:"meta",children:[]},{value:".name",id:"name",children:[]},{value:".population",id:"population",children:[]},{value:".ploidy",id:"ploidy",children:[]},{value:".latitude",id:"latitude",children:[]},{value:".longitude",id:"longitude",children:[]}]},{value:"The genotype table",id:"the-genotype-table",children:[{value:".loci",id:"loci",children:[]},{value:"locus names",id:"locus-names",children:[]},{value:"locus population",id:"locus-population",children:[]},{value:"view genotypes",id:"view-genotypes",children:[]}]}],p={rightToc:u};function b(e){var n=e.components,a=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},p,a,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A little hands-on training will probably go a long way, so let's through some of the functions available in PopGen.jl with the included data. This tutorial will include both inputs and outputs so you can be confident what you're seeing in your Julia session is exactly what's supposed to happen. Sometimes the outputs can be a little lengthy, so they will be arranged in code \"tabs\", where the left-most tab is the input named after what it's accomplishing, and the right tab is the output of running the command. This guide is to show you how to directly access  ",Object(o.b)("inlineCode",{parentName:"p"},"PopData")," elements, but there are shortcut commands to view just about every element of the data within. "),Object(o.b)("div",{className:"admonition admonition-danger alert alert--danger"},Object(o.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(t.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(t.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(t.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"don't manually edit or sort")),Object(o.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"There are specific relationships between the record entries in ",Object(o.b)("inlineCode",{parentName:"p"},"PopData")," objects, so ",Object(o.b)("strong",{parentName:"p"},"do not use")," ",Object(o.b)("inlineCode",{parentName:"p"},"sort"),", ",Object(o.b)("inlineCode",{parentName:"p"},"sort!"),", or manually arrange/add/delete anything in PopData. There are included functions to remove samples or loci, rename things, add location data, etc. "))),Object(o.b)("h2",{id:"loading-in-the-data"},"Loading in the data"),Object(o.b)("p",null,"Let's keep things simple by loading in the nancycats data and calling it ",Object(o.b)("inlineCode",{parentName:"p"},"ncats"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),"julia> ncats = nancycats()\nPopData Object\n  Marker type: Microsatellite\n  Ploidy: 2\n  Number of individuals: 237\n  Number of loci: 9\n  Populations: 17\n  Longitude: absent\n  Latitude: absent\n")),Object(o.b)("p",null,"Now that we have nancycats loaded in, we can use standard Julia accessor conventions to view the elements within our PopData. The DataFrames uses the convention ",Object(o.b)("inlineCode",{parentName:"p"},"PopData.meta.colname")," to directly access the columns we want."),Object(o.b)("h2",{id:"the-metadata-table"},"The metadata table"),Object(o.b)("h3",{id:"meta"},".meta"),Object(o.b)("p",null,"To view the entire ",Object(o.b)("inlineCode",{parentName:"p"},"meta")," table."),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),"julia> ncats.meta\n237\xd75 DataFrame\n\u2502 Row \u2502 name   \u2502 population \u2502 ploidy \u2502 latitude \u2502 longitude \u2502\n\u2502     \u2502 String \u2502 String     \u2502 Int8   \u2502 Float32? \u2502 Float32?  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1   \u2502 N215   \u2502 1          \u2502 2      \u2502 missing  \u2502 missing   \u2502\n\u2502 2   \u2502 N216   \u2502 1          \u2502 2      \u2502 missing  \u2502 missing   \u2502\n\u2502 3   \u2502 N217   \u2502 1          \u2502 2      \u2502 missing  \u2502 missing   \u2502\n\u2502 4   \u2502 N218   \u2502 1          \u2502 2      \u2502 missing  \u2502 missing   \u2502\n\u2502 5   \u2502 N219   \u2502 1          \u2502 2      \u2502 missing  \u2502 missing   \u2502\n\u2502 6   \u2502 N220   \u2502 1          \u2502 2      \u2502 missing  \u2502 missing   \u2502\n\u22ee\n\u2502 231 \u2502 N294   \u2502 17         \u2502 2      \u2502 missing  \u2502 missing   \u2502\n\u2502 232 \u2502 N295   \u2502 17         \u2502 2      \u2502 missing  \u2502 missing   \u2502\n\u2502 233 \u2502 N296   \u2502 17         \u2502 2      \u2502 missing  \u2502 missing   \u2502\n\u2502 234 \u2502 N297   \u2502 17         \u2502 2      \u2502 missing  \u2502 missing   \u2502\n\u2502 235 \u2502 N281   \u2502 17         \u2502 2      \u2502 missing  \u2502 missing   \u2502\n\u2502 236 \u2502 N289   \u2502 17         \u2502 2      \u2502 missing  \u2502 missing   \u2502\n\u2502 237 \u2502 N290   \u2502 17         \u2502 2      \u2502 missing  \u2502 missing   \u2502\n")),Object(o.b)("h3",{id:"name"},".name"),Object(o.b)("p",null,"This will access the names of the samples."),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),'julia> ncats.meta.name\n237-element Array{String,1}:\n "N1"  \n "N2"  \n "N3"  \n "N4"  \n "N5"  \n "N6"  \n "N7"  \n "N8"  \n \u22ee     \n "N230"\n "N231"\n "N232"\n "N233"\n "N234"\n "N235"\n "N236"\n "N237"\n')),Object(o.b)("h3",{id:"population"},".population"),Object(o.b)("p",null,"This will access the names of the populations associated with each sample, in the same order as the  samples."),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),'julia> ncats.meta.population\n237-element Array{String,1}:\n "1" \n "1" \n "1" \n "1" \n "1" \n "1" \n "1" \n "1" \n \u22ee   \n "17"\n "17"\n "17"\n "17"\n "17"\n "17"\n "17"\n "17"\n')),Object(o.b)("p",null,"These ID's aren't super informative. Later, we'll change them using the ",Object(o.b)("inlineCode",{parentName:"p"},"populations!")," command."),Object(o.b)("h3",{id:"ploidy"},".ploidy"),Object(o.b)("p",null,"This shows you the ploidy of the data per individual"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),"julia> ncats.meta.ploidy\n237-element Array{Int8,1}:\n 2\n 2\n 2\n 2\n 2\n 2\n 2\n 2\n \u22ee\n 2\n 2\n 2\n 2\n 2\n 2\n 2\n 2\n")),Object(o.b)("h3",{id:"latitude"},".latitude"),Object(o.b)("p",null,"This accesses the latitude information of the PopObj. If there is none, like in the nancycats data, it returns a vector of ",Object(o.b)("inlineCode",{parentName:"p"},"missing"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),"julia> ncats.meta.latitude\n237-element Array{Union{Missing, Float32},1}:\n missing\n missing\n missing\n missing\n missing\n missing\n missing\n missing\n \u22ee      \n missing\n missing\n missing\n missing\n missing\n missing\n missing\n missing\n")),Object(o.b)("h3",{id:"longitude"},".longitude"),Object(o.b)("p",null,"This accesses the longitude information of the PopObj. Like before, if there is none, like in the nancycats data, it returns an array of ",Object(o.b)("inlineCode",{parentName:"p"},"missing"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),"julia> ncats.meta.longitude\n237-element Array{Union{Missing, Float32},1}:\n missing\n missing\n missing\n missing\n missing\n missing\n missing\n missing\n \u22ee      \n missing\n missing\n missing\n missing\n missing\n missing\n missing\n missing\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(t.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(t.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(t.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"actually seeing some location info ")),Object(o.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"The nancycats data has some weird coordinate system for information, so those data were omitted. If you want a proof of concept for ",Object(o.b)("inlineCode",{parentName:"p"},".longitude")," and ",Object(o.b)("inlineCode",{parentName:"p"},".latitude"),", load in ",Object(o.b)("inlineCode",{parentName:"p"},"gulfsharks")," and try it out. We'll use ",Object(o.b)("inlineCode",{parentName:"p"},"DataFrames.select")," to isolate just the information we want. Later, you'll see that the ",Object(o.b)("inlineCode",{parentName:"p"},"locations")," command does this."),Object(o.b)("pre",{parentName:"div"},Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),"julia> sharks = gulfsharks() ;    # semicolon just supresses printing output\n\njulia> select(sharks.meta, :name, :longitude, :latitude)\n212\xd73 DataFrame\n\u2502 Row \u2502 name    \u2502 longitude \u2502 latitude \u2502\n\u2502     \u2502 String  \u2502 Float64   \u2502 Float64  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1   \u2502 cc_001  \u2502 -80.5993  \u2502 28.3062  \u2502\n\u2502 2   \u2502 cc_002  \u2502 -80.5995  \u2502 28.3079  \u2502\n\u2502 3   \u2502 cc_003  \u2502 -80.5996  \u2502 28.3023  \u2502\n\u2502 4   \u2502 cc_005  \u2502 -80.4225  \u2502 28.6123  \u2502\n\u2502 5   \u2502 cc_007  \u2502 -80.3578  \u2502 27.8666  \u2502\n\u2502 6   \u2502 cc_008  \u2502 -80.3579  \u2502 27.8666  \u2502\n\u22ee\n\u2502 206 \u2502 seg_025 \u2502 -86.5374  \u2502 30.064   \u2502\n\u2502 207 \u2502 seg_026 \u2502 -86.5376  \u2502 30.0696  \u2502\n\u2502 208 \u2502 seg_027 \u2502 -86.0905  \u2502 29.9065  \u2502\n\u2502 209 \u2502 seg_028 \u2502 -87.3661  \u2502 30.0532  \u2502\n\u2502 210 \u2502 seg_029 \u2502 -87.3662  \u2502 30.0522  \u2502\n\u2502 211 \u2502 seg_030 \u2502 -85.7143  \u2502 29.8234  \u2502\n\u2502 212 \u2502 seg_031 \u2502 -85.7143  \u2502 29.8234  \u2502\n")))),Object(o.b)("hr",null),Object(o.b)("h2",{id:"the-genotype-table"},"The genotype table"),Object(o.b)("h3",{id:"loci"},".loci"),Object(o.b)("p",null,"This will show you the entire ",Object(o.b)("inlineCode",{parentName:"p"},"loci")," table."),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),"julia> ncats.loci\n2133\xd74 DataFrame\n\u2502 Row  \u2502 name \u2502 population \u2502 locus \u2502 genotype   \u2502\n\u2502      \u2502 Cat\u2026 \u2502 Cat\u2026       \u2502 Cat\u2026  \u2502 Tuple\u2026?    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1    \u2502 N215 \u2502 1          \u2502 fca8  \u2502 missing    \u2502\n\u2502 2    \u2502 N216 \u2502 1          \u2502 fca8  \u2502 missing    \u2502\n\u2502 3    \u2502 N217 \u2502 1          \u2502 fca8  \u2502 (135, 143) \u2502\n\u2502 4    \u2502 N218 \u2502 1          \u2502 fca8  \u2502 (133, 135) \u2502\n\u2502 5    \u2502 N219 \u2502 1          \u2502 fca8  \u2502 (133, 135) \u2502\n\u2502 6    \u2502 N220 \u2502 1          \u2502 fca8  \u2502 (135, 143) \u2502\n\u22ee\n\u2502 2127 \u2502 N294 \u2502 17         \u2502 fca37 \u2502 (208, 208) \u2502\n\u2502 2128 \u2502 N295 \u2502 17         \u2502 fca37 \u2502 (208, 208) \u2502\n\u2502 2129 \u2502 N296 \u2502 17         \u2502 fca37 \u2502 (208, 220) \u2502\n\u2502 2130 \u2502 N297 \u2502 17         \u2502 fca37 \u2502 (208, 208) \u2502\n\u2502 2131 \u2502 N281 \u2502 17         \u2502 fca37 \u2502 (208, 208) \u2502\n\u2502 2132 \u2502 N289 \u2502 17         \u2502 fca37 \u2502 (208, 208) \u2502\n\u2502 2133 \u2502 N290 \u2502 17         \u2502 fca37 \u2502 (208, 208) \u2502\n")),Object(o.b)("h3",{id:"locus-names"},"locus names"),Object(o.b)("p",null,"This will access the names of the loci as they appear in the data. Since everything but the genotypes in ",Object(o.b)("inlineCode",{parentName:"p"},".loci")," are coded as Categorical, we need to use ",Object(o.b)("inlineCode",{parentName:"p"},"levels()")," from ",Object(o.b)("inlineCode",{parentName:"p"},"CategoricalArrays.jl")," or ",Object(o.b)("inlineCode",{parentName:"p"},"unique()")," from Base to pull out the unique loci. "),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),'julia> levels(ncats.loci.locus)\n# or #\njulia> unique(ncats.loci.locus)\n9-element Array{String,1}:\n "fca8" \n "fca23"\n "fca43"\n "fca45"\n "fca77"\n "fca78"\n "fca90"\n "fca96"\n "fca37"\n')),Object(o.b)("h3",{id:"locus-population"},"locus population"),Object(o.b)("p",null,"This will access the population of the individual for a genotype of a locus. These are also coded as Categorical, we need to use ",Object(o.b)("inlineCode",{parentName:"p"},"levels()")," from ",Object(o.b)("inlineCode",{parentName:"p"},"CategoricalArrays.jl")," or ",Object(o.b)("inlineCode",{parentName:"p"},"unique()")," from Base to pull out the unique populations. "),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),'julia> levels(ncats.loci.locus)\n# or #\njulia> unique(ncats.loci.locus)\n17-element Array{String,1}:\n "1" \n "2"\n "3"\n "4"\n "5"\n \u22ee\n "14"\n "15"\n "16"\n "17"\n')),Object(o.b)("h3",{id:"view-genotypes"},"view genotypes"),Object(o.b)("p",null,'Because the genotype data is in "tidy" format, accessing genotypes in a meaningful way is not immediately obvious. We can of course follow the same convention of ',Object(o.b)("inlineCode",{parentName:"p"},"data.loci.genotype")," as we have above, but a list of all the genotypes across all individuals, loci, and populations isn't terribly useful. Instead, we can use the DataFrames or DataFramesMeta interfaces to retrieve this information. Here are examples using ",Object(o.b)("inlineCode",{parentName:"p"},"@where")," from DataFramesMeta:"),Object(o.b)(s.a,{block:!0,defaultValue:"s",values:[{label:"single locus",value:"s"},{label:"multiple loci",value:"m"},{label:"population",value:"p"}],mdxType:"Tabs"},Object(o.b)(c.a,{value:"s",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),'julia> @where(ncats.loci, :locus .== "fca8")\n2133\xd74 DataFrame\n\u2502 Row  \u2502 name \u2502 population \u2502 locus \u2502 genotype   \u2502\n\u2502      \u2502 Cat\u2026 \u2502 Cat\u2026       \u2502 Cat\u2026  \u2502 Tuple\u2026?    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1    \u2502 N215 \u2502 1          \u2502 fca8  \u2502 missing    \u2502\n\u2502 2    \u2502 N216 \u2502 1          \u2502 fca8  \u2502 missing    \u2502\n\u2502 3    \u2502 N217 \u2502 1          \u2502 fca8  \u2502 (135, 143) \u2502\n\u2502 4    \u2502 N218 \u2502 1          \u2502 fca8  \u2502 (133, 135) \u2502\n\u2502 5    \u2502 N219 \u2502 1          \u2502 fca8  \u2502 (133, 135) \u2502\n\u2502 6    \u2502 N220 \u2502 1          \u2502 fca8  \u2502 (135, 143) \u2502\n\u22ee\n\u2502 2127 \u2502 N294 \u2502 17         \u2502 fca8  \u2502 (208, 208) \u2502\n\u2502 2128 \u2502 N295 \u2502 17         \u2502 fca8  \u2502 (208, 208) \u2502\n\u2502 2129 \u2502 N296 \u2502 17         \u2502 fca8  \u2502 (208, 220) \u2502\n\u2502 2130 \u2502 N297 \u2502 17         \u2502 fca8  \u2502 (208, 208) \u2502\n\u2502 2131 \u2502 N281 \u2502 17         \u2502 fca8  \u2502 (208, 208) \u2502\n\u2502 2132 \u2502 N289 \u2502 17         \u2502 fca8  \u2502 (208, 208) \u2502\n\u2502 2133 \u2502 N290 \u2502 17         \u2502 fca8  \u2502 (208, 208) \u2502\n'))),Object(o.b)(c.a,{value:"m",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),'julia> @where(ncats.loci, :locus .\u2208 Ref(["fca8", "fca23"])\n474\xd74 DataFrame\n\u2502 Row \u2502 name \u2502 population \u2502 locus \u2502 genotype   \u2502\n\u2502     \u2502 Cat\u2026 \u2502 Cat\u2026       \u2502 Cat\u2026  \u2502 Tuple\u2026?    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1   \u2502 N215 \u2502 1          \u2502 fca8  \u2502 missing    \u2502\n\u2502 2   \u2502 N216 \u2502 1          \u2502 fca8  \u2502 missing    \u2502\n\u2502 3   \u2502 N217 \u2502 1          \u2502 fca8  \u2502 (135, 143) \u2502\n\u2502 4   \u2502 N218 \u2502 1          \u2502 fca8  \u2502 (133, 135) \u2502\n\u2502 5   \u2502 N219 \u2502 1          \u2502 fca8  \u2502 (133, 135) \u2502\n\u2502 6   \u2502 N220 \u2502 1          \u2502 fca8  \u2502 (135, 143) \u2502\n\u22ee\n\u2502 468 \u2502 N294 \u2502 17         \u2502 fca23 \u2502 (136, 146) \u2502\n\u2502 469 \u2502 N295 \u2502 17         \u2502 fca23 \u2502 (130, 136) \u2502\n\u2502 470 \u2502 N296 \u2502 17         \u2502 fca23 \u2502 (136, 146) \u2502\n\u2502 471 \u2502 N297 \u2502 17         \u2502 fca23 \u2502 (130, 130) \u2502\n\u2502 472 \u2502 N281 \u2502 17         \u2502 fca23 \u2502 (136, 144) \u2502\n\u2502 473 \u2502 N289 \u2502 17         \u2502 fca23 \u2502 (130, 136) \u2502\n\u2502 474 \u2502 N290 \u2502 17         \u2502 fca23 \u2502 (130, 146) \u2502\n'))),Object(o.b)(c.a,{value:"p",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-julia"}),'julia> @where(x.loci, :population .== "9")\n81\xd74 DataFrames.DataFrame\n\u2502 Row \u2502 name \u2502 population \u2502 locus \u2502 genotype   \u2502\n\u2502     \u2502 Cat\u2026 \u2502 Cat\u2026       \u2502 Cat\u2026  \u2502 Tuple\u2026?    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1   \u2502 N104 \u2502 9          \u2502 fca8  \u2502 (121, 135) \u2502\n\u2502 2   \u2502 N105 \u2502 9          \u2502 fca8  \u2502 (137, 137) \u2502\n\u2502 3   \u2502 N106 \u2502 9          \u2502 fca8  \u2502 (135, 135) \u2502\n\u2502 4   \u2502 N107 \u2502 9          \u2502 fca8  \u2502 (121, 135) \u2502\n\u2502 5   \u2502 N108 \u2502 9          \u2502 fca8  \u2502 (135, 135) \u2502\n\u2502 6   \u2502 N109 \u2502 9          \u2502 fca8  \u2502 (137, 137) \u2502\n\u2502 7   \u2502 N111 \u2502 9          \u2502 fca8  \u2502 (135, 135) \u2502\n\u22ee\n\u2502 74  \u2502 N105 \u2502 9          \u2502 fca37 \u2502 (182, 182) \u2502\n\u2502 75  \u2502 N106 \u2502 9          \u2502 fca37 \u2502 (182, 208) \u2502\n\u2502 76  \u2502 N107 \u2502 9          \u2502 fca37 \u2502 (182, 208) \u2502\n\u2502 77  \u2502 N108 \u2502 9          \u2502 fca37 \u2502 (208, 208) \u2502\n\u2502 78  \u2502 N109 \u2502 9          \u2502 fca37 \u2502 (182, 208) \u2502\n\u2502 79  \u2502 N111 \u2502 9          \u2502 fca37 \u2502 (208, 214) \u2502\n\u2502 80  \u2502 N112 \u2502 9          \u2502 fca37 \u2502 (182, 206) \u2502\n\u2502 81  \u2502 N113 \u2502 9          \u2502 fca37 \u2502 (208, 214) \u2502\n')))),Object(o.b)("p",null,"Now that you're somewhat familiar with the parts of ",Object(o.b)("inlineCode",{parentName:"p"},"PopData"),", ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"/PopGen.jl/docs/tutorials/viewsort"}),"have a look at the commands")," to view and manipulate ",Object(o.b)("inlineCode",{parentName:"p"},"PopData")," objects."))}b.isMDXComponent=!0},200:function(e,n,a){"use strict";a.d(n,"a",(function(){return p})),a.d(n,"b",(function(){return d}));var t=a(0),i=a.n(t);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function c(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var r=i.a.createContext({}),u=function(e){var n=i.a.useContext(r),a=n;return e&&(a="function"==typeof e?e(n):c(c({},n),e)),a},p=function(e){var n=u(e.components);return i.a.createElement(r.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var a=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,r=l(e,["components","mdxType","originalType","parentName"]),p=u(a),m=t,d=p["".concat(s,".").concat(m)]||p[m]||b[m]||o;return a?i.a.createElement(d,c(c({ref:n},r),{},{components:a})):i.a.createElement(d,c({ref:n},r))}));function d(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=a.length,s=new Array(o);s[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:t,s[1]=c;for(var r=2;r<o;r++)s[r]=a[r];return i.a.createElement.apply(null,s)}return i.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},201:function(e,n,a){var t;!function(){"use strict";var a={}.hasOwnProperty;function i(){for(var e=[],n=0;n<arguments.length;n++){var t=arguments[n];if(t){var o=typeof t;if("string"===o||"number"===o)e.push(t);else if(Array.isArray(t)&&t.length){var s=i.apply(null,t);s&&e.push(s)}else if("object"===o)for(var c in t)a.call(t,c)&&t[c]&&e.push(c)}}return e.join(" ")}e.exports?(i.default=i,e.exports=i):void 0===(t=function(){return i}.apply(n,[]))||(e.exports=t)}()},203:function(e,n,a){"use strict";var t=a(0),i=Object(t.createContext)({tabGroupChoices:{},setTabGroupChoices:function(){}});n.a=i},204:function(e,n,a){"use strict";var t=a(0),i=a.n(t);n.a=function(e){return i.a.createElement("div",null,e.children)}},205:function(e,n,a){"use strict";a(23),a(18),a(17);var t=a(0),i=a.n(t),o=a(203);var s=function(){return Object(t.useContext)(o.a)},c=a(201),l=a.n(c),r=a(125),u=a.n(r),p=37,b=39;n.a=function(e){var n=e.block,a=e.children,o=e.defaultValue,c=e.values,r=e.groupId,m=s(),d=m.tabGroupChoices,g=m.setTabGroupChoices,h=Object(t.useState)(o),f=h[0],j=h[1];if(null!=r){var N=d[r];null!=N&&N!==f&&j(N)}var O=function(e){j(e),null!=r&&g(r,e)},y=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:l()("tabs",{"tabs--block":n})},c.map((function(e){var n=e.value,a=e.label;return i.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":f===n,className:l()("tabs__item",u.a.tabItem,{"tabs__item--active":f===n}),key:n,ref:function(e){return y.push(e)},onKeyDown:function(e){return function(e,n,a){switch(a.keyCode){case b:!function(e,n){var a=e.indexOf(n)+1;e[a]?e[a].focus():e[0].focus()}(e,n);break;case p:!function(e,n){var a=e.indexOf(n)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,n)}}(y,e.target,e)},onFocus:function(){return O(n)},onClick:function(){return O(n)}},a)}))),i.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},t.Children.toArray(a).filter((function(e){return e.props.value===f}))[0]))}}}]);